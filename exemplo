<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - Compra de Perfume</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        .container {
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        h2 {
            text-align: center;
            color: #333;
        }
        input, textarea, select, button {
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
        button {
            background-color: #4CAF50;
            color: white;
            font-size: 16px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        img {
            display: block;
            margin: 0 auto;
            width: 100%;
            max-width: 300px;
            border-radius: 8px;
        }
        .total-price {
            font-size: 18px;
            color: #333;
            font-weight: bold;
            text-align: center;
        }
    </style>
</head>
<body>

    <div class="container">
        <h2>Checkout - Compra de Perfume</h2>

        <!-- Exibir a foto do produto -->
        <img src="https://wepink.vtexassets.com/arquivos/ids/159437-600-auto?v=638694312581970000&width=600&height=auto&aspect=true" alt="Perfume">

        <!-- Formulário de Checkout -->
        <form id="checkout-form">
            <label for="name">Nome Completo:</label>
            <input type="text" id="name" name="name" required>

            <label for="cpf">CPF:</label>
            <input type="text" id="cpf" name="cpf" required pattern="\d{3}\.\d{3}\.\d{3}-\d{2}" placeholder="XXX.XXX.XXX-XX">

            <label for="address">Endereço (Rua, Número, Bairro):</label>
            <input type="text" id="address" name="address" required>

            <label for="street">Rua:</label>
            <input type="text" id="street" name="street" required>

            <label for="neighborhood">Bairro:</label>
            <input type="text" id="neighborhood" name="neighborhood" required>

            <label for="number">Número:</label>
            <input type="text" id="number" name="number" required>

            <label for="phone">Telefone de Contato:</label>
            <input type="tel" id="phone" name="phone" required pattern="\(\d{2}\) \d{4,5}-\d{4}" placeholder="(XX) XXXX-XXXX">

            <label for="reference">Ponto de Referência:</label>
            <input type="text" id="reference" name="reference" required>

            <label for="quantity">Quantidade:</label>
            <input type="number" id="quantity" name="quantity" required min="1" value="1">

            <input type="hidden" id="price" name="price" value="90">

            <!-- Opções de pagamento -->
            <label for="payment-method">Método de Pagamento:</label>
            <select id="payment-method" name="payment-method" required>
                <option value="pix">Pix</option>
                <option value="boleto">Boleto</option>
                <option value="cartao">Cartão de Crédito</option>
            </select>

            <!-- Opções de Parcelamento (Cartão) -->
            <div id="parcelamento-container" style="display: none;">
                <label for="parcelas">Número de Parcelas:</label>
                <select id="parcelas" name="parcelas">
                    <option value="1">1x</option>
                    <option value="2">2x</option>
                    <option value="3">3x</option>
                    <option value="4">4x</option>
                    <option value="5">5x</option>
                    <option value="6">6x</option>
                </select>
            </div>

            <div class="total-price">
                <span>Total: R$ <span id="total-price">90,00</span></span>
            </div>

            <button type="submit">Finalizar Compra</button>
        </form>
    </div>

    <script>
        const price = 90; // Preço do produto
        const taxaBoletoCartao = 0.069; // 6,90% de taxa
        const updateTotalPrice = () => {
            const paymentMethod = document.getElementById('payment-method').value;
            let totalPrice = price;

            if (paymentMethod === 'boleto' || paymentMethod === 'cartao') {
                totalPrice += totalPrice * taxaBoletoCartao; // Adicionar a taxa de 6,90%
            }

            // Se o pagamento for no cartão, considerar o parcelamento
            if (paymentMethod === 'cartao') {
                const parcelas = parseInt(document.getElementById('parcelas').value);
                totalPrice = (totalPrice / parcelas).toFixed(2);
            }

            // Exibir o total atualizado
            document.getElementById('total-price').innerText = totalPrice.toFixed(2);
        };

        // Mostrar o campo de parcelamento se o pagamento for no cartão
        document.getElementById('payment-method').addEventListener('change', function() {
            if (this.value === 'cartao') {
                document.getElementById('parcelamento-container').style.display = 'block';
            } else {
                document.getElementById('parcelamento-container').style.display = 'none';
            }
            updateTotalPrice();
        });

        // Atualizar o preço ao mudar o número de parcelas
        document.getElementById('parcelas').addEventListener('change', updateTotalPrice);

        document.getElementById('checkout-form').addEventListener('submit', function (event) {
            event.preventDefault(); // Impede o comportamento padrão de envio do formulário

            // Obter dados do formulário
            const name = document.getElementById('name').value;
            const cpf = document.getElementById('cpf').value;
            const address = document.getElementById('address').value;
            const street = document.getElementById('street').value;
            const neighborhood = document.getElementById('neighborhood').value;
            const number = document.getElementById('number').value;
            const phone = document.getElementById('phone').value;
            const reference = document.getElementById('reference').value;
            const quantity = document.getElementById('quantity').value;
            const paymentMethod = document.getElementById('payment-method').value;
            const parcelas = document.getElementById('parcelas') ? document.getElementById('parcelas').value : 1;

            const totalPrice = parseFloat(document.getElementById('total-price').innerText);

            // Preparar os dados para enviar para a API da Mangofy
            const paymentData = {
                name: name,
                cpf: cpf,
                address: address,
                street: street,
                neighborhood: neighborhood,
                number: number,
                phone: phone,
                reference: reference,
                quantity: quantity,
                total_price: totalPrice, // Preço total (com taxas)
                product_image: "https://wepink.vtexassets.com/arquivos/ids/159437-600-auto?v=638694312581970000&width=600&height=auto&aspect=true",
                product_name: "Perfume",
                payment_method: paymentMethod,
                parcelas: parcelas,
                api_key: "62dce7bc36ea5a61a34633f6f3621342" // Sua chave da API Mangofy
            };

            // Enviar os dados para a API da Mangofy
            fetch('https://api.mangofy.com/checkout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(paymentData),
            })
            .then(response => response.json())
            .then(data => {
                // Exibir resposta da API (sucesso ou erro)
                if (data.success) {
                    alert('Pagamento realizado
